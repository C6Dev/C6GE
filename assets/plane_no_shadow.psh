struct PlanePSInput
{
    float4 Pos          : SV_POSITION;
    float3 ShadowMapPos : SHADOW_MAP_POS;
    float  NdotL        : N_DOT_L;
};

struct PlanePSOutput
{
    float4 Color : SV_TARGET;
};

void main(in  PlanePSInput  PSIn,
          out PlanePSOutput PSOut)
{
    // Simple lighting without shadow mapping
    float3 Color = float3(1.0, 1.0, 1.0) * (PSIn.NdotL * 0.8 + 0.2);
#if CONVERT_PS_OUTPUT_TO_GAMMA
    // Use fast approximation for gamma correction.
    Color = pow(Color, float3(1.0 / 2.2, 1.0 / 2.2, 1.0 / 2.2));
#endif
    PSOut.Color = float4(Color, 1.0);
}